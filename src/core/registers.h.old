#ifndef _JASMIN_REGISTERS_H#define _JASMIN_REGISTERS_H#include <string.h>#include "shared_macros.h"typedef size_t register_id;typedef uint16_t register_size;struct register_list_struct;typedef struct register_list_struct register_list;register_list * create_register_list( register_id size );void destroy_register_list( register_list * regl);/* * creates a new register in the register's list and fills it's memory with zeros * * @regl    register list where the register has to be added * @regid   ID number that will identify the new register * @size    byte size of the new register * @address memory address that will contains the register data * * @return  -1 if the register is not created*/int add_register_to_list    ( register_list * regl, register_id regid, register_size size, void * address );int del_register_from_list  ( register_list * regl, register_id regid );/* * @regl    register list from where the register will be written/readden * @regid   ID number of the register * @buffer  buffer where the register's data have to be stored or where to read the new data from, *          the size of the buffer must be at least equal to the size of the register * * @return  number of bytes readden / written*/register_size read_from_register  ( register_list * regl, register_id regid, void * buffer);register_size write_into_register ( register_list * regl, register_id regid, void * buffer);#endif